version: 2.1

orbs:
  slack: circleci/slack@3.2.0

commands:
  slack_notification:
    description: "Send job status notification to Slack"
    parameters:
      branches:
        type: string
        default: "master"
      fail_only:
        type: boolean
        default: true
    steps:
      - run:
          name:  Get commit message to environment variable
          command: |
            echo 'export GIT_COMMIT_MESSAGE=$(git log --format=oneline -n 1 $CIRCLE_SHA1 | cut -d " " -f2-)' >> $BASH_ENV
          working_directory: ~/project/
      - slack/status:
          fail_only: << parameters.fail_only >>
          only_for_branches: << parameters.branches >>
          webhook: $SLACK_WEB_HOOK
          include_visit_job_action: true
          include_job_number_field: true
          failure_message: ':red_circle: A $CIRCLE_JOB job triggered by $CIRCLE_USERNAME has failed! ($GIT_COMMIT_MESSAGE)'
          success_message: ':tada: A $CIRCLE_JOB job  triggered by $CIRCLE_USERNAME has succeeded! ($GIT_COMMIT_MESSAGE)'


jobs:
  clamav-build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - setup_remote_docker

      - run: sudo pip install boto3 awscli aws-sam-cli pip==19.2.3

      - run:
          name: Build and tag ClamAV container
          command: |
            docker build -t clamav-scanner:latest ~/project/clamav/clamav-docker

      - run:
          name: Build lambdas
          command: |
            sam build -s ~/project/clamav/src
          working_directory: ~/project/clamav

      - slack_notification

  clamav-deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - setup_remote_docker

      - run: sudo pip install boto3 awscli aws-sam-cli pip==19.2.3

      - run:
          name: Build, tag and deploy ClamAV container
          command: |
            source ~/project/deploy/assume_role.sh > /dev/null 2>&1
            docker build -t clamav-scanner:latest ~/project/clamav/clamav-docker &&\
            $(aws ecr get-login --no-include-email --region eu-west-1) &&\
            docker tag clamav-scanner:latest ${AWS_PRODUCTION_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/clamav-scanner:latest &&\
            docker push $_
          no_output_timeout: 20m


      - run:
          name: Build lambdas
          command: |
            source ~/project/deploy/assume_role.sh > /dev/null 2>&1
            sam build -s ~/project/clamav/src
          working_directory: ~/project/clamav

      - run:
          name: Package SAM template
          command: |
            source ~/project/deploy/assume_role.sh > /dev/null 2>&1
            sam package --output-template-file packaged.yaml \
            --s3-bucket avoindata-clamav-scan
          working_directory: ~/project/clamav

      - run:
          name: Deploy SAM template
          command: |
            source ~/project/deploy/assume_role.sh > /dev/null 2>&1
            aws cloudformation deploy --template-file packaged.yaml \
            --stack-name clamav-scan \
            --parameter-overrides \
              SlackPath=/clamav/slack_path \
              SlackChannel=/clamav/slack_channel \
              SlackUser=/clamav/slack_user \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset
          working_directory: ~/project/clamav

      - slack_notification

workflows:
  build_and_test:
    jobs:
      - clamav-build
      - clamav-deploy:
          requires:
            - clamav-build
          filters:
            branches:
              only: master
