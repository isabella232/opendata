---

- name: List cores
  uri:
    url: http://{{ solr_host }}:{{ solr_port }}/solr/admin/cores
    return_content: true
  register: solr_cores_current
  check_mode: false

- name: Ensure Solr conf directories exist
  file:
    path: "{{ solr_home }}/data/{{ item }}/conf"
    state: directory
    owner: "{{ solr_user }}"
    group: "{{ solr_user }}"
    recurse: true
    mode: "0755"
  when: "item not in solr_cores_current.content"
  with_items: "{{ solr_cores }}"

- name: Ensure core configuration directories exist
  command: "cp -r {{ solr_install_path }}/example/files/conf/ {{ solr_home }}/data/{{ item }}/"
  when: "item not in solr_cores_current.content"
  with_items: "{{ solr_cores }}"
  become: true
  become_user: "{{ solr_user }}"

- name: Create cores
  command: "{{ solr_install_path }}/bin/solr create -c {{ item }} -p {{ solr_port }}"
  when: "item not in solr_cores_current.content"
  with_items: "{{ solr_cores }}"
  become: true
  become_user: "{{ solr_user }}"

- name: Copy CKAN Solr schema and config
  template:
    src: "{{ item[1] }}.j2"
    dest: "{{ solr_home }}/data/{{ item[0] }}/conf/{{ item[1] }}"
    mode: "0644"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  with_nested:
    - "{{ solr_cores }}"
    - "{{ solr_core_config_files }}"
  become: true
  become_user: solr
  notify:
    - Restart solr

- name: Remove old schema
  file:
    path: /var/solr/data/{{ item }}/conf/managed-schema
    state: absent
  with_items:
    - "{{ solr_cores }}"
  notify:
    - Restart solr

- name: Force all notified handlers to run at this point
  meta: flush_handlers
