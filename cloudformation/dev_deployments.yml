AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  DevAccountId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /build/accountid
    Description: 'ID of the account that should invoke the deployment'
  BetaEnvironmentName:
    Description: Name of the deployment target environment for beta deployments (infratest, beta, prod)
    Type: 'AWS::SSM::Parameter::Value<String>'
  CmkAdminArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /build/cmk_admin_arn
  BuildUserpArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /build/build_user_arn
  ProdAccountId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /build/productionaccountid
Resources:
  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS:
                !Sub 'arn:aws:iam::${DevAccountId}:role/InvokeDeploymentRole'
      RoleName: DeploymentRole
      Policies:
        - PolicyName: DeploymentPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BetaEnvironmentName}/web/amiid
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BetaEnvironmentName}/scheduled/amiid
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BetaEnvironmentName}/*
              - Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:ListTags
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:AddPermission
                  - lambda:RemovePermission
                  - lambda:UpdateFunctionConfiguration
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:*ChangeSet
                  - cloudformation:ListChangeSets
                  - cloudformation:GetTemplateSummary
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${BetaEnvironmentName}-asg-lt/*
              - Effect: Allow
                Action: ec2:CreateLaunchTemplateVersion
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:launch-template/*
              - Effect: Allow
                Action:
                - iam:PassRole
                Resource: "*"
                Condition:
                  StringLike:
                    iam:PassedToService: ec2.amazonaws.com*
              - Effect: Allow
                Action:
                  - autoscaling:*
                Resource:
                  - "*"
              - Effect: Allow
                Action: ec2:DeleteLaunchTemplate
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:launch-template/*
              - Effect: Allow
                Action:
                  - ec2:CreateLaunchTemplate
                  - ec2:DescribeLaunchTemplates
                  - ec2:DescribeLaunchTemplateVersions
                  - ec2:DescribeInstances
                  - ec2:DescribeImages
                Resource: "*"
              - Effect: Allow
                Action: ec2:RunInstances
                Resource:
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*
                - !Sub arn:aws:ec2:${AWS::Region}::snapshot/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:key-pair/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:placement-group/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
                - !Sub arn:aws:ec2:${AWS::Region}::image/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:launch-template/*
                - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*
  AmiKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "CMK for AMI encryption"
      KeyPolicy:
        Version: "2012-10-17"
        Id: "ami-key-1"
        Statement:
        - Sid: "Enable IAM User Permissions"
          Effect: "Allow"
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: "kms:*"
          Resource: "*"
        - Sid: "Allow access for Key Administrators"
          Effect: "Allow"
          Principal:
            AWS: !Ref CmkAdminArn
          Action: "kms:*"
          Resource: "*"
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS:
            - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
            - !Sub arn:aws:iam::${ProdAccountId}:root
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: '*'
        - Sid: Allow attachment of persistent resources
          Effect: Allow
          Principal:
            AWS:
            - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
            - !Sub arn:aws:iam::${ProdAccountId}:root
          Action:
          - kms:CreateGrant
          Resource: "*"
          Condition:
            Bool:
              kms:GrantIsForAWSResource: true
        - Sid: "Allow access for build user"
          Effect: "Allow"
          Principal:
            AWS: !Ref BuildUserpArn
          Action:
            - "kms:DescribeKey"
            - "kms:Encrypt"
            - "kms:Decrypt"
            - "kms:ReEncrypt*"
            - "kms:GenerateDataKey*"
            - "kms:CreateGrant"
          Resource: "*"
        - Sid: "Allow use of the key for DeploymentRole"
          Effect: "Allow"
          Principal:
            AWS: !GetAtt DeploymentRole.Arn
          Action:
            - "kms:DescribeKey"
            - "kms:Encrypt"
            - "kms:Decrypt"
            - "kms:ReEncrypt*"
            - "kms:GenerateDataKey*"
            - "kms:CreateGrant"
          Resource: "*"


Outputs:
  KeyID:
    Description: "Encryption key for AMIs"
    Value: !Ref AmiKey
    Export:
      Name: "ami-key"